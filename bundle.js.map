{"version":3,"sources":["webpack:///webpack/bootstrap 21a74457424e90562631","webpack:///./example/index.js","webpack:///./index.js","webpack:///./~/invalid-component/index.js","webpack:///./~/computed-style/dist/computedStyle.commonjs.js","webpack:///./~/component-query/index.js","webpack:///./~/form-serialize/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;;;;;;ACnBD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,aAAY;AACZ;AACA;AACA;AACA;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;;;;;;;AC/IA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;;AAEA,qCAAoC;AACpC;;AAEA;;AAEA;AACA;;AAEA,mBAAkB,oBAAoB;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA0B,yBAAyB;AACnfile":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 21a74457424e90562631\n **/","var Changed = require('..')\nvar form = document.forms[0]\nvar checker = new Changed(form, {\n  pets: 'array',\n  active: 'boolean',\n  age: 'number'\n})\n\nvar btn = document.getElementById('submit')\nbtn.addEventListener('click', function (e) {\n  e.preventDefault()\n  var changed = checker.changed()\n  var str = JSON.stringify(changed, null, 2)\n  document.getElementById('changed').textContent = str\n})\n\ndocument.getElementById('reset').addEventListener('click', function (e) {\n  e.preventDefault()\n  checker.reset()\n})\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./example/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var invalid = require('invalid')\nvar query = require('query')\nvar serialize = require('form-serialize')\n\n/**\n * Init changed by `form` and `format` Object\n *\n * format support number, boolean, timestamp, function and array of strings\n *\n * @param {Element} form element\n * @param {Object} format config [optional]\n * @api public\n */\nfunction Changed(form, format) {\n  if (!(this instanceof Changed)) return new Changed(form, format)\n  this.format = format || {}\n  if (/form/i.test(form.tageName)) throw new Error('changed-form require form element')\n  this.form = form\n  this.origObj = serialize(form, {\n    hash: true,\n    empty: true\n  })\n}\n\n/**\n * Get changed object with format\n *\n * @return {Object}\n * @api public\n */\nChanged.prototype.changed = function () {\n  var obj = serialize(this.form, {\n    hash: true,\n    empty: true\n  })\n  var diff = this.diffObj(this.origObj, obj, this.format)\n  if (Object.keys(diff).length === 0) return false\n  return diff\n}\n\n/**\n * Reset the original form value\n *\n * @api public\n */\nChanged.prototype.reset = function () {\n  this.origObj = serialize(this.form, {\n    hash: true,\n    empty: true\n  })\n}\n\nChanged.prototype.diffObj =function (origObj, newObj, format) {\n  var res = {}\n  var arr\n  var form = this.form\n  Object.keys(newObj).forEach(function (k) {\n    var orig = origObj[k]\n    var v = newObj[k]\n    var el = query('[name=' + k + ']', this.form)\n    if (invalid(el, form)) return\n    if (format[k] === 'array') {\n      orig = toArray(orig)\n      v = toArray(v)\n      arr = getDifferent(orig, v)\n      if (arr) res[k] = cleanArray(arr)\n    } else if (orig !== v) {\n      var type = format[k]\n      if (type) {\n        if (typeof type === 'function') {\n          res[k] = type(v)\n        } else {\n          res[k] = formatWithType(v, type)\n        }\n      } else {\n        res[k] = newObj[k]\n      }\n    }\n  })\n  return res\n}\n\n/**\n * Check if two array has different values return new array if different or\n * false if not\n *\n * @param {Array} arr\n * @param {Array} newArr\n * @return {Mixed}\n * @api public\n */\nfunction getDifferent(arr, newArr) {\n  if (arr.length !== newArr.length) return newArr\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (arr[i] !== newArr[i]) return newArr\n  }\n  return false\n}\n\nfunction toArray(str) {\n  if (typeof str === 'string') {\n    if (str.trim() === '') return []\n    return [str]\n  }\n  return str\n}\n\n/**\n * Format value with type\n *\n * @param {string} val\n * @param {String} type [number|boolean|timestamp]\n * @return {Mixed} formatted value\n * @api public\n */\nfunction formatWithType(val, type) {\n  switch (type) {\n    case 'number':\n      if (val === '') return 0\n      val = val.replace(/[^\\d\\.]/g, '')\n      return parseFloat(val, 10)\n    case 'boolean':\n      return !!val\n    case 'timestamp':\n      return (new Date(val)).getTime()\n    default:\n      return val\n  }\n}\n\n/**\n * Create new Array with empty string removed\n *\n * @param {Array} arr\n * @return {Array}\n * @api public\n */\nfunction cleanArray(arr) {\n  return arr.filter(function (v) {\n    return v !== ''\n  })\n}\n\nmodule.exports = Changed\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 1\n ** module chunks = 0\n **/","var computedStyle = require('computed-style')\n\n/**\n * Check if element is invalid\n *\n * @param {Element} el\n * @param {Element} [topEl] optional top element to check\n * @api public\n */\nmodule.exports = function (el, topEl) {\n  topEl = topEl || document.body\n  do {\n    if (el.disabled) return true\n    if (hidden(el)) return true\n    el = el.parentNode\n    // parent could be removed\n    if (!el || el === topEl) break\n  } while(el)\n  return false\n}\n\nfunction hidden(el) {\n  var display = computedStyle(el, 'display')\n  if (display === 'none') return true\n  var visibility = computedStyle(el, 'visibility')\n  if (visibility === 'hidden') return true\n  return false\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/invalid-component/index.js\n ** module id = 2\n ** module chunks = 0\n **/","// DEV: We don't use var but favor parameters since these play nicer with minification\nfunction computedStyle(el, prop, getComputedStyle, style) {\n  getComputedStyle = window.getComputedStyle;\n  style =\n      // If we have getComputedStyle\n      getComputedStyle ?\n        // Query it\n        // TODO: From CSS-Query notes, we might need (node, null) for FF\n        getComputedStyle(el) :\n\n      // Otherwise, we are in IE and use currentStyle\n        el.currentStyle;\n  if (style) {\n    return style\n    [\n      // Switch to camelCase for CSSOM\n      // DEV: Grabbed from jQuery\n      // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n      // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n      prop.replace(/-(\\w)/gi, function (word, letter) {\n        return letter.toUpperCase();\n      })\n    ];\n  }\n}\n\nmodule.exports = computedStyle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/computed-style/dist/computedStyle.commonjs.js\n ** module id = 3\n ** module chunks = 0\n **/","function one(selector, el) {\n  return el.querySelector(selector);\n}\n\nexports = module.exports = function(selector, el){\n  el = el || document;\n  return one(selector, el);\n};\n\nexports.all = function(selector, el){\n  el = el || document;\n  return el.querySelectorAll(selector);\n};\n\nexports.engine = function(obj){\n  if (!obj.one) throw new Error('.one callback required');\n  if (!obj.all) throw new Error('.all callback required');\n  one = obj.one;\n  exports.all = obj.all;\n  return exports;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/component-query/index.js\n ** module id = 4\n ** module chunks = 0\n **/","// get successful control from form and assemble into object\n// http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n\n// types which indicate a submit action and are not successful controls\n// these will be ignored\nvar k_r_submitter = /^(?:submit|button|image|reset|file)$/i;\n\n// node names which could be successful controls\nvar k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;\n\n// Matches bracket notation.\nvar brackets = /(\\[[^\\[\\]]*\\])/g;\n\n// serializes form fields\n// @param form MUST be an HTMLForm element\n// @param options is an optional argument to configure the serialization. Default output\n// with no options specified is a url encoded string\n//    - hash: [true | false] Configure the output type. If true, the output will\n//    be a js object.\n//    - serializer: [function] Optional serializer function to override the default one.\n//    The function takes 3 arguments (result, key, value) and should return new result\n//    hash and url encoded str serializers are provided with this module\n//    - disabled: [true | false]. If true serialize disabled fields.\n//    - empty: [true | false]. If true serialize empty fields\nfunction serialize(form, options) {\n    if (typeof options != 'object') {\n        options = { hash: !!options };\n    }\n    else if (options.hash === undefined) {\n        options.hash = true;\n    }\n\n    var result = (options.hash) ? {} : '';\n    var serializer = options.serializer || ((options.hash) ? hash_serializer : str_serialize);\n\n    var elements = form && form.elements ? form.elements : [];\n\n    //Object store each radio and set if it's empty or not\n    var radio_store = Object.create(null);\n\n    for (var i=0 ; i<elements.length ; ++i) {\n        var element = elements[i];\n\n        // ingore disabled fields\n        if ((!options.disabled && element.disabled) || !element.name) {\n            continue;\n        }\n        // ignore anyhting that is not considered a success field\n        if (!k_r_success_contrls.test(element.nodeName) ||\n            k_r_submitter.test(element.type)) {\n            continue;\n        }\n\n        var key = element.name;\n        var val = element.value;\n\n        // we can't just use element.value for checkboxes cause some browsers lie to us\n        // they say \"on\" for value when the box isn't checked\n        if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n            val = undefined;\n        }\n\n        // If we want empty elements\n        if (options.empty) {\n            // for checkbox\n            if (element.type === 'checkbox' && !element.checked) {\n                val = '';\n            }\n\n            // for radio\n            if (element.type === 'radio') {\n                if (!radio_store[element.name] && !element.checked) {\n                    radio_store[element.name] = false;\n                }\n                else if (element.checked) {\n                    radio_store[element.name] = true;\n                }\n            }\n\n            // if options empty is true, continue only if its radio\n            if (!val && element.type == 'radio') {\n                continue;\n            }\n        }\n        else {\n            // value-less fields are ignored unless options.empty is true\n            if (!val) {\n                continue;\n            }\n        }\n\n        // multi select boxes\n        if (element.type === 'select-multiple') {\n            val = [];\n\n            var selectOptions = element.options;\n            var isSelectedOptions = false;\n            for (var j=0 ; j<selectOptions.length ; ++j) {\n                var option = selectOptions[j];\n                var allowedEmpty = options.empty && !option.value;\n                var hasValue = (option.value || allowedEmpty);\n                if (option.selected && hasValue) {\n                    isSelectedOptions = true;\n\n                    // If using a hash serializer be sure to add the\n                    // correct notation for an array in the multi-select\n                    // context. Here the name attribute on the select element\n                    // might be missing the trailing bracket pair. Both names\n                    // \"foo\" and \"foo[]\" should be arrays.\n                    if (options.hash && key.slice(key.length - 2) !== '[]') {\n                        result = serializer(result, key + '[]', option.value);\n                    }\n                    else {\n                        result = serializer(result, key, option.value);\n                    }\n                }\n            }\n\n            // Serialize if no selected options and options.empty is true\n            if (!isSelectedOptions && options.empty) {\n                result = serializer(result, key, '');\n            }\n\n            continue;\n        }\n\n        result = serializer(result, key, val);\n    }\n\n    // Check for all empty radio buttons and serialize them with key=\"\"\n    if (options.empty) {\n        for (var key in radio_store) {\n            if (!radio_store[key]) {\n                result = serializer(result, key, '');\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction parse_keys(string) {\n    var keys = [];\n    var prefix = /^([^\\[\\]]*)/;\n    var children = new RegExp(brackets);\n    var match = prefix.exec(string);\n\n    if (match[1]) {\n        keys.push(match[1]);\n    }\n\n    while ((match = children.exec(string)) !== null) {\n        keys.push(match[1]);\n    }\n\n    return keys;\n}\n\nfunction hash_assign(result, keys, value) {\n    if (keys.length === 0) {\n        result = value;\n        return result;\n    }\n\n    var key = keys.shift();\n    var between = key.match(/^\\[(.+?)\\]$/);\n\n    if (key === '[]') {\n        result = result || [];\n\n        if (Array.isArray(result)) {\n            result.push(hash_assign(null, keys, value));\n        }\n        else {\n            // This might be the result of bad name attributes like \"[][foo]\",\n            // in this case the original `result` object will already be\n            // assigned to an object literal. Rather than coerce the object to\n            // an array, or cause an exception the attribute \"_values\" is\n            // assigned as an array.\n            result._values = result._values || [];\n            result._values.push(hash_assign(null, keys, value));\n        }\n\n        return result;\n    }\n\n    // Key is an attribute name and can be assigned directly.\n    if (!between) {\n        result[key] = hash_assign(result[key], keys, value);\n    }\n    else {\n        var string = between[1];\n        var index = parseInt(string, 10);\n\n        // If the characters between the brackets is not a number it is an\n        // attribute name and can be assigned directly.\n        if (isNaN(index)) {\n            result = result || {};\n            result[string] = hash_assign(result[string], keys, value);\n        }\n        else {\n            result = result || [];\n            result[index] = hash_assign(result[index], keys, value);\n        }\n    }\n\n    return result;\n}\n\n// Object/hash encoding serializer.\nfunction hash_serializer(result, key, value) {\n    var matches = key.match(brackets);\n\n    // Has brackets? Use the recursive assignment function to walk the keys,\n    // construct any missing objects in the result tree and make the assignment\n    // at the end of the chain.\n    if (matches) {\n        var keys = parse_keys(key);\n        hash_assign(result, keys, value);\n    }\n    else {\n        // Non bracket notation can make assignments directly.\n        var existing = result[key];\n\n        // If the value has been assigned already (for instance when a radio and\n        // a checkbox have the same name attribute) convert the previous value\n        // into an array before pushing into it.\n        //\n        // NOTE: If this requirement were removed all hash creation and\n        // assignment could go through `hash_assign`.\n        if (existing) {\n            if (!Array.isArray(existing)) {\n                result[key] = [ existing ];\n            }\n\n            result[key].push(value);\n        }\n        else {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\n// urlform encoding serializer\nfunction str_serialize(result, key, value) {\n    // encode newlines as \\r\\n cause the html spec says so\n    value = value.replace(/(\\r)?\\n/g, '\\r\\n');\n    value = encodeURIComponent(value);\n\n    // spaces should be '+' rather than '%20'.\n    value = value.replace(/%20/g, '+');\n    return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;\n}\n\nmodule.exports = serialize;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/form-serialize/index.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}